
module complex;

import java.lang: ClassCastException;

class Complex(double real, double imag)
    int getReal()
        real,
    int getImag()
        imag,
    String toString()
        "\(real) + \(imag)i",
    int hashCode()
        Double#valueOf(real)#hashCode() + Double#valueOf(imag)#hashCode(),
    boolean equals(Object other)
        try
            c = other unsafely_as ~Complex;
            c#getReal() == real and c#getImag() == imag
        catch ClassCastException:
            false
        yrt,
end;

typedef opaque cplx = ~Complex;

real c1 is ~Complex -> number =
    c1#getReal();

imaginary c1 is ~Complex -> number =
    c1#getImag();

complex re im is number -> number -> ~Complex =
    new Complex(re, im);

add c1 c2 is ~Complex -> ~Complex -> ~Complex =
    complex (real c1 + real c2) (imaginary c1 + imaginary c2);

scale r c is number -> ~Complex -> ~Complex =
    complex (r * real c) (r * imaginary c);

{
   real,
   imaginary,
   complex,
   add,
   scale,
   i = complex 0 1,
   one = complex 1 0,
   zero = complex 0 0,
} as {
   real is cplx -> number,
   imaginary is cplx -> number,
   complex is number -> number -> cplx,
   add is cplx -> cplx -> cplx,
   scale is number -> cplx -> cplx,
   i is cplx,
   one is cplx,
   zero is cplx,
}

