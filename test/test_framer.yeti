
module test.test_framer;

fr = load framer;
block = load block;
test = load test.test;

tests = [

"framecount-2x2": \( 
    fr = fr.frames { framesize = 2, hop = 2 } (test.testStream 2);
    test.compare (length fr) 1
),

"framecount-2x3": \( 
    fr = fr.frames { framesize = 2, hop = 2 } (test.testStream 3);
    test.compare (length fr) 2
),

"framecount-2x4": \( 
    fr = fr.frames { framesize = 2, hop = 2 } (test.testStream 4);
    test.compare (length fr) 2
),

"framecount-2.1x0": \( 
    fr = fr.frames { framesize = 2, hop = 1 } (test.testStream 0);
    test.compare (length fr) 1
),

"framecount-2.1x1": \( 
    fr = fr.frames { framesize = 2, hop = 1 } (test.testStream 1);
    test.compare (length fr) 2
),

"framecount-2.1x2": \( 
    fr = fr.frames { framesize = 2, hop = 1 } (test.testStream 2);
    test.compare (length fr) 3
),

"framecount-2.1x3": \( 
    fr = fr.frames { framesize = 2, hop = 1 } (test.testStream 3);
    test.compare (length fr) 4
),

"framecount-4.1x4": \( 
    fr = fr.frames { framesize = 4, hop = 1 } (test.testStream 4);
    test.compare (length fr) 7
),

"framecount-4.3x4": \( 
    fr = fr.frames { framesize = 4, hop = 3 } (test.testStream 4);
    test.compare (length fr) 2 
),

"framecount-4.4x4": \( 
    fr = fr.frames { framesize = 4, hop = 4 } (test.testStream 4);
    test.compare (length fr) 1
),

"framecount-3.2x4": \(
    fr = fr.frames { framesize = 3, hop = 2 } (test.testStream 4);
    test.compare (length fr) 3
),

"frames-2x5": \( 
    fr = fr.frames { framesize = 2, hop = 2 } (test.testStream 5);
    expected = [ [1,2], [3,4], [5,0] ];
    test.compare (map block.list fr) expected;
),

"frames-4.3x4": \( 
    fr = fr.frames { framesize = 4, hop = 3 } (test.testStream 4);
    expected = [ [0,1,2,3], [3,4,0,0] ];
    test.compare (map block.list fr) expected;
),

"frames-3.2x4": \(
    fr = fr.frames { framesize = 3, hop = 2 } (test.testStream 4);
    expected = [ [0,1,2], [2,3,4], [4,0,0] ];
    test.compare (map block.list fr) expected;
),

"frames-3.1x6": \(
    fr = fr.frames { framesize = 3, hop = 1 } (test.testStream 6);
    expected = [ [0,0,1], [0,1,2], [1,2,3], [2,3,4],
                 [3,4,5], [4,5,6], [5,6,0], [6,0,0] ];
    test.compare (map block.list fr) expected;
),

];

{ tests is hash<string, () -> boolean> };


