
module may.mathmisc;

/**
 * The greatest common divisor of natural numbers a and b.
 */
gcd a b = (c = a % b; if c == 0 then b else gcd b c fi);

factorial x = if x < 0 then 0 else fold do x y: x*y done 1 [1..x] fi;

pow x y = 
    if y < 0 then 1 / (pow x (-y))
    elif y == 0 then 1
    elif y == 1 then x
    elif y == 2 then x*x
    elif y == int(y) and y > 0
    then
        ipow a b = fold do x _: x*a done 1 [1..b]; // a^b where b∈ℕ
        ipow x y
    else
        Math#pow(x, y) 
    fi;

round x =
    if x < 0 then
        -(round (-x))
    else
        int (x + 0.5)
    fi;

ceil x =
    Math#ceil(x);

/** 
 * True if x is 2^n for some integer n >= 0.
 */
isPowerOfTwo x =
    x >= 1 and
       (x == 1 or
           (half = x/2;
            half == int half and isPowerOfTwo half));

/**
 * The next higher integer power of two from x, e.g. 1300 -> 2048, 2048 -> 2048.
 */
nextPowerOfTwo x =
    if x <= 1 then 1
    elif isPowerOfTwo x then x
    else
        np i n =
            if i == 0 then n
            else np (int (i/2)) (n * 2)
            fi;
        np x 1;
    fi;

{
    gcd,
    factorial,
    pow,
    round,
    ceil,
    isPowerOfTwo,
    nextPowerOfTwo,
}

