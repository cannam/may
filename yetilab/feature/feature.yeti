
module yetilab.feature.feature;

vec = load yetilab.vector.vector;
fr = load yetilab.stream.framer;

// Utility functions for feature extractors

magdiff frame1 frame2 =
    sum (map2 do a b: abs(a - b) done (vec.list frame1) (vec.list frame2));

emptyFrameFor frames =
    vec.zeros
        if empty? frames then 0
        else vec.length (head frames)
        fi;

features featureFunc frames =
   (featuresOf prev frames =
        case frames of
        frame::rest: featureFunc prev frame :. \(featuresOf frame rest);
         _: [];
        esac;
    featuresOf (emptyFrameFor frames) frames);

{ magdiff, emptyFrameFor, features };



