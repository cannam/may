module block;

vec = load fvector;

zeros = Block . vec.zeros;
ones  = Block . vec.ones;

block v is ~double[] -> (Block ~double[]) = 
    Block v;

unblock b is (Block ~double[]) -> ~double[] =
    case b of Block a: a esac;

list' b = vec.list (unblock b);
length' b = vec.length (unblock b);

copyOf b = Block (vec.copyOf (unblock b));
subset b start len = Block (vec.subset (unblock b) start len);

{
zeros, ones,
block, unblock,
length = length',
list = list',
copyOf, subset,
}

